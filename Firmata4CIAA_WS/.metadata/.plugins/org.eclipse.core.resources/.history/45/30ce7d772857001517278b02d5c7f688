/* Copyright Year, Author
 *
 * This file is part of a project.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */


/*==================[inclusions]=============================================*/

#include "main.h"		// <= own header
#include "UART_DRIVER.h"
#include "IO_DRIVER.h"
#include "FIRMATA.h"

/*==================[macros and definitions]=================================*/

/*==================[internal data declaration]==============================*/

/*==================[internal functions declaration]=========================*/
int main( void );
/*==================[internal data definition]===============================*/

/*==================[external data definition]===============================*/

/*==================[internal functions definition]==========================*/

/*==================[external functions definition]==========================*/

int main(void)
{
	/*---------Initialization---------*/
	IO_DRIVER_Init();
	UART_DRIVER_Init();

	/*----------Task creation---------*/

	xTaskCreate( IO_DRIVER_UpdateTask, "ADCupdate", 240, NULL, 2, NULL );
	xTaskCreate( FIRMATA_UpdateTask, "FIRMATAupdate", 240, NULL, 4, NULL );
	xTaskCreate( FIRMATA_InputsUpdateTask, "InputsUpdate", 240, NULL, 3, NULL );

	/*-------------Test tasks-----------------*/
	//xTaskCreate( IO_DRIVER_BoardTestTask, "boardTest", 240, NULL, 3, NULL );
	//xTaskCreate( UART_DRIVER_echoTask, "echo", 240, NULL, 3, NULL );
	/*-----------------------------------------------------*/

	xTaskCreate( UART_DRIVER_TxGatekeeperTask, "TxGatekeeper", 240, NULL, 1, NULL );
	// Rx implemented with interruption
	//xTaskCreate( UART_DRIVER_RxGatekeeperTask, "RxGatekeeper", 240, NULL, 1, NULL );

	/* Start the scheduler so the created tasks start executing. */
	vTaskStartScheduler();

	for( ;; );		//Error occurred

	/*while(1)	{	}*/

	return 0;
}
/*==================[end of file]============================================*/
